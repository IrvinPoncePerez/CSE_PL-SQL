CREATE TABLE ATET_SB_MEMBERS_ACCOUNTS
(
	MEMBER_ACCOUNT_ID      NUMBER   NOT NULL,
	MEMBER_ID              NUMBER   NOT NULL, 
	CODE_COMBINATION_ID    NUMBER,
	ACCOUNT_NUMBER         VARCHAR2(250),
	ACCOUNT_DESCRIPTION    VARCHAR2(250),
	DEBIT_BALANCE          NUMBER,
	CREDIT_BALANCE         NUMBER,
	LAST_TRANSACTION_DATE  DATE,
	ATTRIBUTE1             NUMBER,
	ATTRIBUTE2             NUMBER,
	ATTRIBUTE3             NUMBER,
	ATTRIBUTE4             NUMBER,
	ATTRIBUTE5             NUMBER,
	ATTRIBUTE6             VARCHAR2(250),
	ATTRIBUTE7             VARCHAR2(250),
	ATTRIBUTE8             VARCHAR2(250),
	ATTRIBUTE9             VARCHAR2(250),
	ATTRIBUTE10            VARCHAR2(250),
	ATTRIBUTE11            VARCHAR2(250),
	ATTRIBUTE12            VARCHAR2(250),
	ATTRIBUTE13            VARCHAR2(1),
	ATTRIBUTE14            VARCHAR2(250),
	ATTRIBUTE15            VARCHAR2(250),
	CREATION_DATE          DATE,
	CREATED_BY             NUMBER,
	LAST_UPDATE_DATE       DATE,
	LAST_UPDATED_BY        NUMBER
);


ALTER TABLE ATET_SB_MEMBERS_ACCOUNTS
	ADD CONSTRAINT UQ_ATET_SB_MEMBERS_ACCOUNTS UNIQUE (MEMBER_ACCOUNT_ID)
 USING INDEX ;
 
 
 ALTER TABLE ATET_SB_MEMBERS_ACCOUNTS
    ADD CONSTRAINT FK_ATETSBMEMACC_SAVINGBANKID
        FOREIGN KEY (MEMBER_ID)
        REFERENCES ATET_SB_MEMBERS(MEMBER_ID);
        
        
CREATE SEQUENCE ATET_SB_MEMBERS_ACCOUNTS_SEQ
  START WITH 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
  
CREATE OR REPLACE TRIGGER ATET_SB_MEMBERS_ACCOUNTS_TGR
BEFORE INSERT
   ON ATET_SB_MEMBERS_ACCOUNTS
   FOR EACH ROW
DECLARE

   var_next_id  NUMBER;

BEGIN

    SELECT ATET_SB_MEMBERS_ACCOUNTS_SEQ.NEXTVAL
      INTO var_next_id
      FROM dual;        
      
    :NEW.MEMBER_ACCOUNT_ID := var_next_id;

END;