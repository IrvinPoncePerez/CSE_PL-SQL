CREATE OR REPLACE FUNCTION APPS.XXCALV_Salario_SDI
             ( p_Assignment_Id                IN     NUMBER
             ) RETURN VARCHAR2 IS
    --
    CURSOR c_Valor_SDI (p_Assignment_Id     NUMBER) IS
      SELECT HLU.MEANING
    FROM PAY_ELEMENT_TYPES_F          ETF
        ,PAY_ELEMENT_ENTRIES_F        EEF
        ,PAY_INPUT_VALUES_F           IVF
        ,PAY_ELEMENT_ENTRY_VALUES_F   EEV
        ,HR_LOOKUPS                   HLU
    WHERE 1 = 1
     AND ETF.ELEMENT_NAME           = 'Integrated Daily Wage'
     AND EEF.ELEMENT_TYPE_ID        = ETF.ELEMENT_TYPE_ID
     AND EEF.ASSIGNMENT_ID          = p_Assignment_Id
     AND IVF.ELEMENT_TYPE_ID        = ETF.ELEMENT_TYPE_ID
     AND IVF.DISPLAY_SEQUENCE       = 4
     AND EEV.ELEMENT_ENTRY_ID       = EEF.ELEMENT_ENTRY_ID
     AND EEV.INPUT_VALUE_ID         = IVF.INPUT_VALUE_ID
     AND HLU.LOOKUP_TYPE            = IVF.LOOKUP_TYPE
     AND HLU.ENABLED_FLAG           = 'Y'
     AND HLU.LOOKUP_CODE            = EEV.SCREEN_ENTRY_VALUE
     AND SYSDATE BETWEEN EEV.EFFECTIVE_START_DATE AND EEV.EFFECTIVE_END_DATE
     AND SYSDATE BETWEEN EEF.EFFECTIVE_START_DATE AND EEF.EFFECTIVE_END_DATE;
    --
    v_Valor_SDI        PAY_ELEMENT_ENTRY_VALUES_F.SCREEN_ENTRY_VALUE%TYPE;
    --
  BEGIN
    --
    v_Valor_SDI := NULL;
    OPEN  c_Valor_SDI (p_Assignment_Id);
    FETCH c_Valor_SDI INTO v_Valor_SDI;
    IF c_Valor_SDI%NOTFOUND THEN
      v_Valor_SDI := NULL;
    END IF;
    CLOSE c_Valor_SDI;
    --
    RETURN v_Valor_SDI;
    --
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END XXCALV_Salario_SDI;