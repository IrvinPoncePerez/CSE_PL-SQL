CREATE TABLE ATET_SB_SAVINGS_TRANSACTIONS
(
	SAVING_TRANSACTION_ID  NUMBER   NOT NULL,
	MEMBER_ACCOUNT_ID      NUMBER   NOT NULL,
    MEMBER_ID              NUMBER   NOT NULL,
    PAYROLL_RESULT_ID      NUMBER   NOT NULL,
    PERSON_ID              NUMBER,
    EARNED_DATE            DATE,
    TIME_PERIOD_ID         NUMBER,
    PERIOD_NAME            VARCHAR2(100),
    ELEMENT_NAME           VARCHAR2(250),
    ENTRY_NAME             VARCHAR2(100),
    ENTRY_UNITS            VARCHAR2(50),
    ENTRY_VALUE            NUMBER,
    TRANSACTION_CODE       VARCHAR2(20),
	DEBIT_AMOUNT           NUMBER,
    CREDIT_AMOUNT          NUMBER,
    REQUEST_ID             NUMBER,
    ACCOUNTED_FLAG         VARCHAR2(50),
	ATTRIBUTE1             NUMBER,
	ATTRIBUTE2             NUMBER,
	ATTRIBUTE3             NUMBER,
	ATTRIBUTE4             NUMBER,
	ATTRIBUTE5             NUMBER,
	ATTRIBUTE6             VARCHAR2(250),
	ATTRIBUTE7             VARCHAR2(250),
	ATTRIBUTE8             VARCHAR2(250),
	ATTRIBUTE9             VARCHAR2(250),
	ATTRIBUTE10            VARCHAR2(250),
	ATTRIBUTE11            VARCHAR2(250),
	ATTRIBUTE12            VARCHAR2(250),
	ATTRIBUTE13            VARCHAR2(250),
	ATTRIBUTE14            VARCHAR2(250),
	ATTRIBUTE15            VARCHAR2(250),
	CREATION_DATE          DATE,
	CREATED_BY             NUMBER,
	LAST_UPDATE_DATE       DATE,
	LAST_UPDATED_BY        NUMBER
);


ALTER TABLE ATET_SB_SAVINGS_TRANSACTIONS
	ADD CONSTRAINT UQ_ATETSBSAVINGSTRANSACTIONS UNIQUE (SAVING_TRANSACTION_ID)
 USING INDEX ;
 
 
ALTER TABLE ATET_SB_SAVINGS_TRANSACTIONS
    ADD CONSTRAINT FK_ATET_SBSAVTRAN_MEMACCID
        FOREIGN KEY (MEMBER_ACCOUNT_ID)
        REFERENCES ATET_SB_MEMBERS_ACCOUNTS(MEMBER_ACCOUNT_ID);
        
ALTER TABLE ATET_SB_SAVINGS_TRANSACTIONS
    ADD CONSTRAINT FK_ATET_SBSAVTRAN_MEMID
        FOREIGN KEY (MEMBER_ID)
        REFERENCES ATET_SB_MEMBERS(MEMBER_ID); 
        
ALTER TABLE ATET_SB_SAVINGS_TRANSACTIONS
    ADD CONSTRAINT FK_ATET_SBSAVTRAN_PAYRESID
        FOREIGN KEY (PAYROLL_RESULT_ID)
        REFERENCES ATET_SB_PAYROLL_RESULTS(PAYROLL_RESULT_ID); 
        
        

 

CREATE SEQUENCE ATET_SB_SAVINGS_TRANS_SEQ
  START WITH 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
  
CREATE OR REPLACE TRIGGER ATET_SB_SAVINGS_TRANS_TGR
BEFORE INSERT
   ON ATET_SB_SAVINGS_TRANSACTIONS
   FOR EACH ROW
DECLARE

   var_next_id  NUMBER;

BEGIN

    SELECT ATET_SB_SAVINGS_TRANS_SEQ.NEXTVAL
      INTO var_next_id
      FROM dual;        
      
    :NEW.SAVING_TRANSACTION_ID := var_next_id;

END;