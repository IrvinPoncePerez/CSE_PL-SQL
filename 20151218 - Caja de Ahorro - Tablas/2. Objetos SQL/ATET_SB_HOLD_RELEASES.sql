--DROP TABLE APPS.ATET_SB_HOLD_RELEASES CASCADE CONSTRAINTS;

CREATE TABLE APPS.ATET_SB_HOLD_RELEASES
(
  HOLD_RELEASE_ID      NUMBER                   NOT NULL,
  CREATION_DATE        DATE                     NOT NULL,
  CREATED_BY           NUMBER                   NOT NULL,
  LAST_UPDATE_DATE     DATE                     NOT NULL,
  LAST_UPDATED_BY      NUMBER                   NOT NULL,
  HOLD_SOURCE_ID       NUMBER,
  RELEASE_REASON_CODE  VARCHAR2(3000 BYTE)      NOT NULL,
  RELEASE_COMMENT      VARCHAR2(2000 BYTE),
  ATTRIBUTE1           NUMBER,
  ATTRIBUTE2           NUMBER,
  ATTRIBUTE3           NUMBER,
  ATTRIBUTE4           NUMBER,
  ATTRIBUTE5           NUMBER,
  ATTRIBUTE6           VARCHAR2(240 BYTE),
  ATTRIBUTE7           VARCHAR2(240 BYTE),
  ATTRIBUTE8           VARCHAR2(240 BYTE),
  ATTRIBUTE9           VARCHAR2(240 BYTE),
  ATTRIBUTE10          VARCHAR2(240 BYTE),
  ATTRIBUTE11          VARCHAR2(240 BYTE),
  ATTRIBUTE12          VARCHAR2(240 BYTE),
  ATTRIBUTE13          VARCHAR2(240 BYTE),
  ATTRIBUTE14          VARCHAR2(240 BYTE),
  ATTRIBUTE15          VARCHAR2(240 BYTE),
  LOAN_HOLD_ID         NUMBER
)
TABLESPACE APPS_TS_TX_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             128K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

ALTER TABLE ATET_SB_HOLD_RELEASES
	ADD CONSTRAINT UQ_ATET_HOLD_RELEASES UNIQUE (HOLD_RELEASE_ID)
 USING INDEX ;
 

CREATE SEQUENCE ATET_SB_HOLD_RELEASES_SEQ
  START WITH 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
  
CREATE OR REPLACE TRIGGER ATET_SB_HOLD_RELEASES_TGR
BEFORE INSERT
   ON ATET_SB_HOLD_RELEASES
   FOR EACH ROW
DECLARE

   var_next_id  NUMBER;

BEGIN

    SELECT ATET_SB_HOLD_RELEASES_SEQ.NEXTVAL
      INTO var_next_id
      FROM dual;        
      
    :NEW.HOLD_RELEASE_ID := var_next_id;

END;